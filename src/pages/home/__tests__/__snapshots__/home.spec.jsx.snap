// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Home /> snapshot 1`] = `
<MaterialUIWrapper>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {},
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.24,
            "active": "#fff",
            "disabled": "rgba(255, 255, 255, 0.3)",
            "disabledBackground": "rgba(255, 255, 255, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(255, 255, 255, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(255, 255, 255, 0.08)",
            "hoverOpacity": 0.08,
            "selected": "rgba(255, 255, 255, 0.16)",
            "selectedOpacity": 0.16,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#303030",
            "paper": "#424242",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(255, 255, 255, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "#303f9f",
            "light": "#7986cb",
            "main": "#3f51b5",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "#c51162",
            "light": "#ff4081",
            "main": "#f50057",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(255, 255, 255, 0.5)",
            "hint": "rgba(255, 255, 255, 0.5)",
            "icon": "rgba(255, 255, 255, 0.5)",
            "primary": "#fff",
            "secondary": "rgba(255, 255, 255, 0.7)",
          },
          "tonalOffset": 0.2,
          "type": "dark",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(Home)>
        <Home
          getRateAction={[Function]}
        >
          <CenteredContent
            classNameContainer=""
            classNameItem=""
          >
            <WithStyles(ForwardRef(Grid))
              className="makeStyles-root-14"
              container={true}
              direction="column"
              justify="center"
            >
              <ForwardRef(Grid)
                className="makeStyles-root-14"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
                direction="column"
                justify="center"
              >
                <div
                  className="MuiGrid-root makeStyles-root-14 MuiGrid-container MuiGrid-direction-xs-column MuiGrid-justify-xs-center"
                >
                  <WithStyles(ForwardRef(Grid))
                    className=""
                    item={true}
                  >
                    <ForwardRef(Grid)
                      className=""
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item"
                      >
                        <Styled(MuiBox)
                          className="makeStyles-root-13"
                          mx="auto"
                          my={3}
                        >
                          <div
                            className="MuiBox-root MuiBox-root-15 makeStyles-root-13"
                          >
                            <WithStyles(ForwardRef(Typography))
                              align="center"
                              variant="h3"
                            >
                              <ForwardRef(Typography)
                                align="center"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                variant="h3"
                              >
                                <h3
                                  className="MuiTypography-root MuiTypography-h3 MuiTypography-alignCenter"
                                >
                                  Exchange
                                </h3>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                            <Styled(MuiBox)
                              my={2}
                            >
                              <div
                                className="MuiBox-root MuiBox-root-16"
                              >
                                <Connect(Wallet)>
                                  <Wallet
                                    dispatch={[Function]}
                                    wallets={
                                      Object {
                                        "activeWallets": Array [
                                          Object {
                                            "balance": "123",
                                            "currency": "USD",
                                          },
                                          Object {
                                            "balance": "456",
                                            "currency": "EUR",
                                          },
                                        ],
                                        "inactiveWallet": Array [
                                          Object {
                                            "balance": "789",
                                            "currency": "GBP",
                                          },
                                        ],
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      variant="body2"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="body2"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-body2"
                                        >
                                          Balance
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      key="wallet-USD"
                                      variant="h4"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="h4"
                                      >
                                        <h4
                                          className="MuiTypography-root MuiTypography-h4"
                                        >
                                          123
                                           
                                          $
                                        </h4>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      key="wallet-EUR"
                                      variant="h4"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="h4"
                                      >
                                        <h4
                                          className="MuiTypography-root MuiTypography-h4"
                                        >
                                          456
                                           
                                          €
                                        </h4>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </Wallet>
                                </Connect(Wallet)>
                                <Connect(Converter)>
                                  <Converter
                                    changeAmountAction={[Function]}
                                    changeCurrencyAction={[Function]}
                                    converterEntities={
                                      Object {
                                        "activeType": "from",
                                        "from": Object {
                                          "amount": "0",
                                          "currency": "USD",
                                        },
                                        "to": Object {
                                          "amount": "0",
                                          "currency": "EUR",
                                        },
                                      }
                                    }
                                    exchangeRateLoading={false}
                                    getRateAction={[Function]}
                                    priceRatioEntities={
                                      Object {
                                        "from": "5",
                                        "to": "6",
                                      }
                                    }
                                  >
                                    <Control
                                      inputHandleChange={[Function]}
                                      inputId="amount-from"
                                      inputName="amount-from"
                                      inputValue="0"
                                      selectHandleChange={[Function]}
                                      selectId="currency-from"
                                      selectName="currency-from"
                                      selectOptions={
                                        Array [
                                          Object {
                                            "label": "USD",
                                            "value": "USD",
                                          },
                                          Object {
                                            "label": "EUR",
                                            "value": "EUR",
                                          },
                                          Object {
                                            "label": "GBP",
                                            "value": "GBP",
                                          },
                                        ]
                                      }
                                      selectValue="USD"
                                    >
                                      <Styled(MuiBox)
                                        my={2}
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-17"
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            container={true}
                                          >
                                            <ForwardRef(Grid)
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                            >
                                              <div
                                                className="MuiGrid-root MuiGrid-container"
                                              >
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={10}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-xs-center": "MuiGrid-justify-xs-center",
                                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={10}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
                                                    >
                                                      <Money
                                                        handleChange={[Function]}
                                                        id="amount-from"
                                                        name="amount-from"
                                                        value="0"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="makeStyles-root-18"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="makeStyles-root-18"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="MuiFormControl-root makeStyles-root-18"
                                                            >
                                                              <WithStyles(ForwardRef(Input))
                                                                autoComplete="off"
                                                                id="amount-from"
                                                                name="amount-from"
                                                                onChange={[Function]}
                                                                value="0"
                                                              >
                                                                <ForwardRef(Input)
                                                                  autoComplete="off"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root",
                                                                      "underline": "MuiInput-underline",
                                                                    }
                                                                  }
                                                                  id="amount-from"
                                                                  name="amount-from"
                                                                  onChange={[Function]}
                                                                  value="0"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoComplete="off"
                                                                    classes={
                                                                      Object {
                                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "formControl": "MuiInput-formControl",
                                                                        "fullWidth": "MuiInput-fullWidth",
                                                                        "input": "MuiInput-input",
                                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInput-marginDense",
                                                                        "multiline": "MuiInput-multiline",
                                                                        "root": "MuiInput-root MuiInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    id="amount-from"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    name="amount-from"
                                                                    onChange={[Function]}
                                                                    type="text"
                                                                    value="0"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoComplete="off"
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                          "input": "MuiInputBase-input MuiInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={false}
                                                                      id="amount-from"
                                                                      inputComponent="input"
                                                                      multiline={false}
                                                                      name="amount-from"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="0"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoComplete="off"
                                                                          className="MuiInputBase-input MuiInput-input"
                                                                          disabled={false}
                                                                          id="amount-from"
                                                                          name="amount-from"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value="0"
                                                                        />
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(Input)>
                                                              </WithStyles(ForwardRef(Input))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </Money>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={2}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-xs-center": "MuiGrid-justify-xs-center",
                                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={2}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-2"
                                                    >
                                                      <Select
                                                        id="currency-from"
                                                        name="currency-from"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "USD",
                                                              "value": "USD",
                                                            },
                                                            Object {
                                                              "label": "EUR",
                                                              "value": "EUR",
                                                            },
                                                            Object {
                                                              "label": "GBP",
                                                              "value": "GBP",
                                                            },
                                                          ]
                                                        }
                                                        value="USD"
                                                      >
                                                        <WithStyles(ForwardRef(TextField))
                                                          className="makeStyles-root-19"
                                                          id="currency-from"
                                                          name="currency-from"
                                                          onChange={[Function]}
                                                          select={true}
                                                          value="USD"
                                                        >
                                                          <ForwardRef(TextField)
                                                            className="makeStyles-root-19"
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            id="currency-from"
                                                            name="currency-from"
                                                            onChange={[Function]}
                                                            select={true}
                                                            value="USD"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root makeStyles-root-19"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={false}
                                                              required={false}
                                                              variant="standard"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root makeStyles-root-19"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={false}
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root makeStyles-root-19"
                                                                >
                                                                  <WithStyles(ForwardRef(Select))
                                                                    id="currency-from"
                                                                    input={
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={false}
                                                                        multiline={false}
                                                                        name="currency-from"
                                                                        onChange={[Function]}
                                                                        value="USD"
                                                                      />
                                                                    }
                                                                    value="USD"
                                                                  >
                                                                    <ForwardRef(Select)
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "nativeInput": "MuiSelect-nativeInput",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        }
                                                                      }
                                                                      id="currency-from"
                                                                      input={
                                                                        <WithStyles(ForwardRef(Input))
                                                                          autoFocus={false}
                                                                          fullWidth={false}
                                                                          multiline={false}
                                                                          name="currency-from"
                                                                          onChange={[Function]}
                                                                          value="USD"
                                                                        />
                                                                      }
                                                                      value="USD"
                                                                    >
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={false}
                                                                        inputComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "propTypes": Object {
                                                                              "IconComponent": [Function],
                                                                              "MenuProps": [Function],
                                                                              "SelectDisplayProps": [Function],
                                                                              "aria-label": [Function],
                                                                              "autoFocus": [Function],
                                                                              "autoWidth": [Function],
                                                                              "children": [Function],
                                                                              "className": [Function],
                                                                              "classes": [Function],
                                                                              "defaultValue": [Function],
                                                                              "disabled": [Function],
                                                                              "displayEmpty": [Function],
                                                                              "inputRef": [Function],
                                                                              "labelId": [Function],
                                                                              "multiple": [Function],
                                                                              "name": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onClose": [Function],
                                                                              "onFocus": [Function],
                                                                              "onOpen": [Function],
                                                                              "open": [Function],
                                                                              "readOnly": [Function],
                                                                              "renderValue": [Function],
                                                                              "tabIndex": [Function],
                                                                              "type": [Function],
                                                                              "value": [Function],
                                                                              "variant": [Function],
                                                                            },
                                                                            "render": [Function],
                                                                          }
                                                                        }
                                                                        inputProps={
                                                                          Object {
                                                                            "IconComponent": Object {
                                                                              "$$typeof": Symbol(react.memo),
                                                                              "compare": null,
                                                                              "type": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "render": [Function],
                                                                              },
                                                                            },
                                                                            "MenuProps": undefined,
                                                                            "SelectDisplayProps": Object {
                                                                              "id": "currency-from",
                                                                            },
                                                                            "autoWidth": false,
                                                                            "children": Array [
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="USD"
                                                                              >
                                                                                USD
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="EUR"
                                                                              >
                                                                                EUR
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="GBP"
                                                                              >
                                                                                GBP
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                            ],
                                                                            "classes": Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "filled": "MuiSelect-filled",
                                                                              "icon": "MuiSelect-icon",
                                                                              "iconFilled": "MuiSelect-iconFilled",
                                                                              "iconOpen": "MuiSelect-iconOpen",
                                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                                              "nativeInput": "MuiSelect-nativeInput",
                                                                              "outlined": "MuiSelect-outlined",
                                                                              "root": "MuiSelect-root",
                                                                              "select": "MuiSelect-select",
                                                                              "selectMenu": "MuiSelect-selectMenu",
                                                                            },
                                                                            "displayEmpty": false,
                                                                            "labelId": undefined,
                                                                            "multiple": false,
                                                                            "onClose": undefined,
                                                                            "onOpen": undefined,
                                                                            "open": undefined,
                                                                            "renderValue": undefined,
                                                                            "type": undefined,
                                                                            "variant": "standard",
                                                                          }
                                                                        }
                                                                        multiline={false}
                                                                        name="currency-from"
                                                                        onChange={[Function]}
                                                                        value="USD"
                                                                      >
                                                                        <ForwardRef(Input)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root",
                                                                              "underline": "MuiInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          inputComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "propTypes": Object {
                                                                                "IconComponent": [Function],
                                                                                "MenuProps": [Function],
                                                                                "SelectDisplayProps": [Function],
                                                                                "aria-label": [Function],
                                                                                "autoFocus": [Function],
                                                                                "autoWidth": [Function],
                                                                                "children": [Function],
                                                                                "className": [Function],
                                                                                "classes": [Function],
                                                                                "defaultValue": [Function],
                                                                                "disabled": [Function],
                                                                                "displayEmpty": [Function],
                                                                                "inputRef": [Function],
                                                                                "labelId": [Function],
                                                                                "multiple": [Function],
                                                                                "name": [Function],
                                                                                "onBlur": [Function],
                                                                                "onChange": [Function],
                                                                                "onClose": [Function],
                                                                                "onFocus": [Function],
                                                                                "onOpen": [Function],
                                                                                "open": [Function],
                                                                                "readOnly": [Function],
                                                                                "renderValue": [Function],
                                                                                "tabIndex": [Function],
                                                                                "type": [Function],
                                                                                "value": [Function],
                                                                                "variant": [Function],
                                                                              },
                                                                              "render": [Function],
                                                                            }
                                                                          }
                                                                          inputProps={
                                                                            Object {
                                                                              "IconComponent": Object {
                                                                                "$$typeof": Symbol(react.memo),
                                                                                "compare": null,
                                                                                "type": Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "render": [Function],
                                                                                },
                                                                              },
                                                                              "MenuProps": undefined,
                                                                              "SelectDisplayProps": Object {
                                                                                "id": "currency-from",
                                                                              },
                                                                              "autoWidth": false,
                                                                              "children": Array [
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="USD"
                                                                                >
                                                                                  USD
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="EUR"
                                                                                >
                                                                                  EUR
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="GBP"
                                                                                >
                                                                                  GBP
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                              ],
                                                                              "classes": Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "filled": "MuiSelect-filled",
                                                                                "icon": "MuiSelect-icon",
                                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                                "outlined": "MuiSelect-outlined",
                                                                                "root": "MuiSelect-root",
                                                                                "select": "MuiSelect-select",
                                                                                "selectMenu": "MuiSelect-selectMenu",
                                                                              },
                                                                              "displayEmpty": false,
                                                                              "labelId": undefined,
                                                                              "multiple": false,
                                                                              "onClose": undefined,
                                                                              "onOpen": undefined,
                                                                              "open": undefined,
                                                                              "renderValue": undefined,
                                                                              "type": undefined,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                          multiline={false}
                                                                          name="currency-from"
                                                                          onChange={[Function]}
                                                                          value="USD"
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            autoFocus={false}
                                                                            classes={
                                                                              Object {
                                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "formControl": "MuiInput-formControl",
                                                                                "fullWidth": "MuiInput-fullWidth",
                                                                                "input": "MuiInput-input",
                                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInput-marginDense",
                                                                                "multiline": "MuiInput-multiline",
                                                                                "root": "MuiInput-root MuiInput-underline",
                                                                                "underline": null,
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            inputComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "propTypes": Object {
                                                                                  "IconComponent": [Function],
                                                                                  "MenuProps": [Function],
                                                                                  "SelectDisplayProps": [Function],
                                                                                  "aria-label": [Function],
                                                                                  "autoFocus": [Function],
                                                                                  "autoWidth": [Function],
                                                                                  "children": [Function],
                                                                                  "className": [Function],
                                                                                  "classes": [Function],
                                                                                  "defaultValue": [Function],
                                                                                  "disabled": [Function],
                                                                                  "displayEmpty": [Function],
                                                                                  "inputRef": [Function],
                                                                                  "labelId": [Function],
                                                                                  "multiple": [Function],
                                                                                  "name": [Function],
                                                                                  "onBlur": [Function],
                                                                                  "onChange": [Function],
                                                                                  "onClose": [Function],
                                                                                  "onFocus": [Function],
                                                                                  "onOpen": [Function],
                                                                                  "open": [Function],
                                                                                  "readOnly": [Function],
                                                                                  "renderValue": [Function],
                                                                                  "tabIndex": [Function],
                                                                                  "type": [Function],
                                                                                  "value": [Function],
                                                                                  "variant": [Function],
                                                                                },
                                                                                "render": [Function],
                                                                              }
                                                                            }
                                                                            inputProps={
                                                                              Object {
                                                                                "IconComponent": Object {
                                                                                  "$$typeof": Symbol(react.memo),
                                                                                  "compare": null,
                                                                                  "type": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  },
                                                                                },
                                                                                "MenuProps": undefined,
                                                                                "SelectDisplayProps": Object {
                                                                                  "id": "currency-from",
                                                                                },
                                                                                "autoWidth": false,
                                                                                "children": Array [
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="USD"
                                                                                  >
                                                                                    USD
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="EUR"
                                                                                  >
                                                                                    EUR
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="GBP"
                                                                                  >
                                                                                    GBP
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                ],
                                                                                "classes": Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "filled": "MuiSelect-filled",
                                                                                  "icon": "MuiSelect-icon",
                                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                                  "outlined": "MuiSelect-outlined",
                                                                                  "root": "MuiSelect-root",
                                                                                  "select": "MuiSelect-select",
                                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                                },
                                                                                "displayEmpty": false,
                                                                                "labelId": undefined,
                                                                                "multiple": false,
                                                                                "onClose": undefined,
                                                                                "onOpen": undefined,
                                                                                "open": undefined,
                                                                                "renderValue": undefined,
                                                                                "type": undefined,
                                                                                "variant": "standard",
                                                                              }
                                                                            }
                                                                            multiline={false}
                                                                            name="currency-from"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="USD"
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={false}
                                                                              inputComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "propTypes": Object {
                                                                                    "IconComponent": [Function],
                                                                                    "MenuProps": [Function],
                                                                                    "SelectDisplayProps": [Function],
                                                                                    "aria-label": [Function],
                                                                                    "autoFocus": [Function],
                                                                                    "autoWidth": [Function],
                                                                                    "children": [Function],
                                                                                    "className": [Function],
                                                                                    "classes": [Function],
                                                                                    "defaultValue": [Function],
                                                                                    "disabled": [Function],
                                                                                    "displayEmpty": [Function],
                                                                                    "inputRef": [Function],
                                                                                    "labelId": [Function],
                                                                                    "multiple": [Function],
                                                                                    "name": [Function],
                                                                                    "onBlur": [Function],
                                                                                    "onChange": [Function],
                                                                                    "onClose": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "onOpen": [Function],
                                                                                    "open": [Function],
                                                                                    "readOnly": [Function],
                                                                                    "renderValue": [Function],
                                                                                    "tabIndex": [Function],
                                                                                    "type": [Function],
                                                                                    "value": [Function],
                                                                                    "variant": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                }
                                                                              }
                                                                              inputProps={
                                                                                Object {
                                                                                  "IconComponent": Object {
                                                                                    "$$typeof": Symbol(react.memo),
                                                                                    "compare": null,
                                                                                    "type": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "render": [Function],
                                                                                    },
                                                                                  },
                                                                                  "MenuProps": undefined,
                                                                                  "SelectDisplayProps": Object {
                                                                                    "id": "currency-from",
                                                                                  },
                                                                                  "autoWidth": false,
                                                                                  "children": Array [
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="USD"
                                                                                    >
                                                                                      USD
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="EUR"
                                                                                    >
                                                                                      EUR
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="GBP"
                                                                                    >
                                                                                      GBP
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                  ],
                                                                                  "classes": Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "filled": "MuiSelect-filled",
                                                                                    "icon": "MuiSelect-icon",
                                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                                    "outlined": "MuiSelect-outlined",
                                                                                    "root": "MuiSelect-root",
                                                                                    "select": "MuiSelect-select",
                                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                                  },
                                                                                  "displayEmpty": false,
                                                                                  "labelId": undefined,
                                                                                  "multiple": false,
                                                                                  "onClose": undefined,
                                                                                  "onOpen": undefined,
                                                                                  "open": undefined,
                                                                                  "renderValue": undefined,
                                                                                  "type": undefined,
                                                                                  "variant": "standard",
                                                                                }
                                                                              }
                                                                              multiline={false}
                                                                              name="currency-from"
                                                                              onChange={[Function]}
                                                                              type="text"
                                                                              value="USD"
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(SelectInput)
                                                                                  IconComponent={
                                                                                    Object {
                                                                                      "$$typeof": Symbol(react.memo),
                                                                                      "compare": null,
                                                                                      "type": Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "render": [Function],
                                                                                      },
                                                                                    }
                                                                                  }
                                                                                  SelectDisplayProps={
                                                                                    Object {
                                                                                      "id": "currency-from",
                                                                                    }
                                                                                  }
                                                                                  aria-invalid={false}
                                                                                  autoFocus={false}
                                                                                  autoWidth={false}
                                                                                  className="MuiInputBase-input MuiInput-input"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "filled": "MuiSelect-filled",
                                                                                      "icon": "MuiSelect-icon",
                                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                                      "outlined": "MuiSelect-outlined",
                                                                                      "root": "MuiSelect-root",
                                                                                      "select": "MuiSelect-select",
                                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  displayEmpty={false}
                                                                                  inputRef={[Function]}
                                                                                  multiple={false}
                                                                                  name="currency-from"
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  value="USD"
                                                                                  variant="standard"
                                                                                >
                                                                                  <div
                                                                                    aria-haspopup="listbox"
                                                                                    aria-labelledby="currency-from"
                                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                    id="currency-from"
                                                                                    onBlur={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    role="button"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    USD
                                                                                  </div>
                                                                                  <input
                                                                                    aria-hidden={true}
                                                                                    autoFocus={false}
                                                                                    className="MuiSelect-nativeInput"
                                                                                    name="currency-from"
                                                                                    onAnimationStart={[Function]}
                                                                                    onChange={[Function]}
                                                                                    required={false}
                                                                                    tabIndex={-1}
                                                                                    value="USD"
                                                                                  />
                                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                                    className="MuiSelect-icon"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                                      className="MuiSelect-icon"
                                                                                    >
                                                                                      <ForwardRef(SvgIcon)
                                                                                        className="MuiSelect-icon"
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M7 10l5 5 5-5z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                                  <WithStyles(ForwardRef(Menu))
                                                                                    MenuListProps={
                                                                                      Object {
                                                                                        "aria-labelledby": undefined,
                                                                                        "disableListWrap": true,
                                                                                        "role": "listbox",
                                                                                      }
                                                                                    }
                                                                                    PaperProps={
                                                                                      Object {
                                                                                        "style": Object {
                                                                                          "minWidth": undefined,
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    anchorEl={
                                                                                      <div
                                                                                        aria-haspopup="listbox"
                                                                                        aria-labelledby="currency-from"
                                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                        id="currency-from"
                                                                                        role="button"
                                                                                        tabindex="0"
                                                                                      >
                                                                                        USD
                                                                                      </div>
                                                                                    }
                                                                                    id="menu-currency-from"
                                                                                    onClose={[Function]}
                                                                                    open={false}
                                                                                  >
                                                                                    <ForwardRef(Menu)
                                                                                      MenuListProps={
                                                                                        Object {
                                                                                          "aria-labelledby": undefined,
                                                                                          "disableListWrap": true,
                                                                                          "role": "listbox",
                                                                                        }
                                                                                      }
                                                                                      PaperProps={
                                                                                        Object {
                                                                                          "style": Object {
                                                                                            "minWidth": undefined,
                                                                                          },
                                                                                        }
                                                                                      }
                                                                                      anchorEl={
                                                                                        <div
                                                                                          aria-haspopup="listbox"
                                                                                          aria-labelledby="currency-from"
                                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                          id="currency-from"
                                                                                          role="button"
                                                                                          tabindex="0"
                                                                                        >
                                                                                          USD
                                                                                        </div>
                                                                                      }
                                                                                      classes={
                                                                                        Object {
                                                                                          "list": "MuiMenu-list",
                                                                                          "paper": "MuiMenu-paper",
                                                                                        }
                                                                                      }
                                                                                      id="menu-currency-from"
                                                                                      onClose={[Function]}
                                                                                      open={false}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(Popover))
                                                                                        PaperProps={
                                                                                          Object {
                                                                                            "classes": Object {
                                                                                              "root": "MuiMenu-paper",
                                                                                            },
                                                                                            "style": Object {
                                                                                              "minWidth": undefined,
                                                                                            },
                                                                                          }
                                                                                        }
                                                                                        anchorEl={
                                                                                          <div
                                                                                            aria-haspopup="listbox"
                                                                                            aria-labelledby="currency-from"
                                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                            id="currency-from"
                                                                                            role="button"
                                                                                            tabindex="0"
                                                                                          >
                                                                                            USD
                                                                                          </div>
                                                                                        }
                                                                                        anchorOrigin={
                                                                                          Object {
                                                                                            "horizontal": "left",
                                                                                            "vertical": "top",
                                                                                          }
                                                                                        }
                                                                                        getContentAnchorEl={[Function]}
                                                                                        id="menu-currency-from"
                                                                                        onClose={[Function]}
                                                                                        onEntering={[Function]}
                                                                                        open={false}
                                                                                        transformOrigin={
                                                                                          Object {
                                                                                            "horizontal": "left",
                                                                                            "vertical": "top",
                                                                                          }
                                                                                        }
                                                                                        transitionDuration="auto"
                                                                                      >
                                                                                        <ForwardRef(Popover)
                                                                                          PaperProps={
                                                                                            Object {
                                                                                              "classes": Object {
                                                                                                "root": "MuiMenu-paper",
                                                                                              },
                                                                                              "style": Object {
                                                                                                "minWidth": undefined,
                                                                                              },
                                                                                            }
                                                                                          }
                                                                                          anchorEl={
                                                                                            <div
                                                                                              aria-haspopup="listbox"
                                                                                              aria-labelledby="currency-from"
                                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                              id="currency-from"
                                                                                              role="button"
                                                                                              tabindex="0"
                                                                                            >
                                                                                              USD
                                                                                            </div>
                                                                                          }
                                                                                          anchorOrigin={
                                                                                            Object {
                                                                                              "horizontal": "left",
                                                                                              "vertical": "top",
                                                                                            }
                                                                                          }
                                                                                          classes={
                                                                                            Object {
                                                                                              "paper": "MuiPopover-paper",
                                                                                              "root": "MuiPopover-root",
                                                                                            }
                                                                                          }
                                                                                          getContentAnchorEl={[Function]}
                                                                                          id="menu-currency-from"
                                                                                          onClose={[Function]}
                                                                                          onEntering={[Function]}
                                                                                          open={false}
                                                                                          transformOrigin={
                                                                                            Object {
                                                                                              "horizontal": "left",
                                                                                              "vertical": "top",
                                                                                            }
                                                                                          }
                                                                                          transitionDuration="auto"
                                                                                        >
                                                                                          <ForwardRef(Modal)
                                                                                            BackdropProps={
                                                                                              Object {
                                                                                                "invisible": true,
                                                                                              }
                                                                                            }
                                                                                            className="MuiPopover-root"
                                                                                            container={<body />}
                                                                                            id="menu-currency-from"
                                                                                            onClose={[Function]}
                                                                                            open={false}
                                                                                          />
                                                                                        </ForwardRef(Popover)>
                                                                                      </WithStyles(ForwardRef(Popover))>
                                                                                    </ForwardRef(Menu)>
                                                                                  </WithStyles(ForwardRef(Menu))>
                                                                                </ForwardRef(SelectInput)>
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(Input)>
                                                                      </WithStyles(ForwardRef(Input))>
                                                                    </ForwardRef(Select)>
                                                                  </WithStyles(ForwardRef(Select))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                      </Select>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </Control>
                                    <RateRatio
                                      currencySymbolLeft="$"
                                      currencySymbolRight="€"
                                      loading={false}
                                      rate="6"
                                    >
                                      <Styled(MuiBox)
                                        my={1}
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-20"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            variant="caption"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="caption"
                                            >
                                              <span
                                                className="MuiTypography-root MuiTypography-caption"
                                              >
                                                1 
                                                $
                                                 = 
                                                6
                                                 
                                                €
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </RateRatio>
                                    <Control
                                      inputHandleChange={[Function]}
                                      inputId="amount-to"
                                      inputName="amount-to"
                                      inputValue="0"
                                      selectHandleChange={[Function]}
                                      selectId="currency-to"
                                      selectName="currency-to"
                                      selectOptions={
                                        Array [
                                          Object {
                                            "label": "USD",
                                            "value": "USD",
                                          },
                                          Object {
                                            "label": "EUR",
                                            "value": "EUR",
                                          },
                                          Object {
                                            "label": "GBP",
                                            "value": "GBP",
                                          },
                                        ]
                                      }
                                      selectValue="EUR"
                                    >
                                      <Styled(MuiBox)
                                        my={2}
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-21"
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            container={true}
                                          >
                                            <ForwardRef(Grid)
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                            >
                                              <div
                                                className="MuiGrid-root MuiGrid-container"
                                              >
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={10}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-xs-center": "MuiGrid-justify-xs-center",
                                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={10}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
                                                    >
                                                      <Money
                                                        handleChange={[Function]}
                                                        id="amount-to"
                                                        name="amount-to"
                                                        value="0"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="makeStyles-root-18"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="makeStyles-root-18"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                          >
                                                            <div
                                                              className="MuiFormControl-root makeStyles-root-18"
                                                            >
                                                              <WithStyles(ForwardRef(Input))
                                                                autoComplete="off"
                                                                id="amount-to"
                                                                name="amount-to"
                                                                onChange={[Function]}
                                                                value="0"
                                                              >
                                                                <ForwardRef(Input)
                                                                  autoComplete="off"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root",
                                                                      "underline": "MuiInput-underline",
                                                                    }
                                                                  }
                                                                  id="amount-to"
                                                                  name="amount-to"
                                                                  onChange={[Function]}
                                                                  value="0"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoComplete="off"
                                                                    classes={
                                                                      Object {
                                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "formControl": "MuiInput-formControl",
                                                                        "fullWidth": "MuiInput-fullWidth",
                                                                        "input": "MuiInput-input",
                                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInput-marginDense",
                                                                        "multiline": "MuiInput-multiline",
                                                                        "root": "MuiInput-root MuiInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    id="amount-to"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    name="amount-to"
                                                                    onChange={[Function]}
                                                                    type="text"
                                                                    value="0"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoComplete="off"
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                          "input": "MuiInputBase-input MuiInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={false}
                                                                      id="amount-to"
                                                                      inputComponent="input"
                                                                      multiline={false}
                                                                      name="amount-to"
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="0"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoComplete="off"
                                                                          className="MuiInputBase-input MuiInput-input"
                                                                          disabled={false}
                                                                          id="amount-to"
                                                                          name="amount-to"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value="0"
                                                                        />
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(Input)>
                                                              </WithStyles(ForwardRef(Input))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </Money>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={2}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-xs-center": "MuiGrid-justify-xs-center",
                                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={2}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-2"
                                                    >
                                                      <Select
                                                        id="currency-to"
                                                        name="currency-to"
                                                        onChange={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "label": "USD",
                                                              "value": "USD",
                                                            },
                                                            Object {
                                                              "label": "EUR",
                                                              "value": "EUR",
                                                            },
                                                            Object {
                                                              "label": "GBP",
                                                              "value": "GBP",
                                                            },
                                                          ]
                                                        }
                                                        value="EUR"
                                                      >
                                                        <WithStyles(ForwardRef(TextField))
                                                          className="makeStyles-root-19"
                                                          id="currency-to"
                                                          name="currency-to"
                                                          onChange={[Function]}
                                                          select={true}
                                                          value="EUR"
                                                        >
                                                          <ForwardRef(TextField)
                                                            className="makeStyles-root-19"
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            id="currency-to"
                                                            name="currency-to"
                                                            onChange={[Function]}
                                                            select={true}
                                                            value="EUR"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root makeStyles-root-19"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={false}
                                                              required={false}
                                                              variant="standard"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root makeStyles-root-19"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={false}
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root makeStyles-root-19"
                                                                >
                                                                  <WithStyles(ForwardRef(Select))
                                                                    id="currency-to"
                                                                    input={
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={false}
                                                                        multiline={false}
                                                                        name="currency-to"
                                                                        onChange={[Function]}
                                                                        value="EUR"
                                                                      />
                                                                    }
                                                                    value="EUR"
                                                                  >
                                                                    <ForwardRef(Select)
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "nativeInput": "MuiSelect-nativeInput",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        }
                                                                      }
                                                                      id="currency-to"
                                                                      input={
                                                                        <WithStyles(ForwardRef(Input))
                                                                          autoFocus={false}
                                                                          fullWidth={false}
                                                                          multiline={false}
                                                                          name="currency-to"
                                                                          onChange={[Function]}
                                                                          value="EUR"
                                                                        />
                                                                      }
                                                                      value="EUR"
                                                                    >
                                                                      <WithStyles(ForwardRef(Input))
                                                                        autoFocus={false}
                                                                        fullWidth={false}
                                                                        inputComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "propTypes": Object {
                                                                              "IconComponent": [Function],
                                                                              "MenuProps": [Function],
                                                                              "SelectDisplayProps": [Function],
                                                                              "aria-label": [Function],
                                                                              "autoFocus": [Function],
                                                                              "autoWidth": [Function],
                                                                              "children": [Function],
                                                                              "className": [Function],
                                                                              "classes": [Function],
                                                                              "defaultValue": [Function],
                                                                              "disabled": [Function],
                                                                              "displayEmpty": [Function],
                                                                              "inputRef": [Function],
                                                                              "labelId": [Function],
                                                                              "multiple": [Function],
                                                                              "name": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onClose": [Function],
                                                                              "onFocus": [Function],
                                                                              "onOpen": [Function],
                                                                              "open": [Function],
                                                                              "readOnly": [Function],
                                                                              "renderValue": [Function],
                                                                              "tabIndex": [Function],
                                                                              "type": [Function],
                                                                              "value": [Function],
                                                                              "variant": [Function],
                                                                            },
                                                                            "render": [Function],
                                                                          }
                                                                        }
                                                                        inputProps={
                                                                          Object {
                                                                            "IconComponent": Object {
                                                                              "$$typeof": Symbol(react.memo),
                                                                              "compare": null,
                                                                              "type": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "render": [Function],
                                                                              },
                                                                            },
                                                                            "MenuProps": undefined,
                                                                            "SelectDisplayProps": Object {
                                                                              "id": "currency-to",
                                                                            },
                                                                            "autoWidth": false,
                                                                            "children": Array [
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="USD"
                                                                              >
                                                                                USD
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="EUR"
                                                                              >
                                                                                EUR
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                value="GBP"
                                                                              >
                                                                                GBP
                                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                                            ],
                                                                            "classes": Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "filled": "MuiSelect-filled",
                                                                              "icon": "MuiSelect-icon",
                                                                              "iconFilled": "MuiSelect-iconFilled",
                                                                              "iconOpen": "MuiSelect-iconOpen",
                                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                                              "nativeInput": "MuiSelect-nativeInput",
                                                                              "outlined": "MuiSelect-outlined",
                                                                              "root": "MuiSelect-root",
                                                                              "select": "MuiSelect-select",
                                                                              "selectMenu": "MuiSelect-selectMenu",
                                                                            },
                                                                            "displayEmpty": false,
                                                                            "labelId": undefined,
                                                                            "multiple": false,
                                                                            "onClose": undefined,
                                                                            "onOpen": undefined,
                                                                            "open": undefined,
                                                                            "renderValue": undefined,
                                                                            "type": undefined,
                                                                            "variant": "standard",
                                                                          }
                                                                        }
                                                                        multiline={false}
                                                                        name="currency-to"
                                                                        onChange={[Function]}
                                                                        value="EUR"
                                                                      >
                                                                        <ForwardRef(Input)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "marginDense": "MuiInput-marginDense",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root",
                                                                              "underline": "MuiInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          inputComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "propTypes": Object {
                                                                                "IconComponent": [Function],
                                                                                "MenuProps": [Function],
                                                                                "SelectDisplayProps": [Function],
                                                                                "aria-label": [Function],
                                                                                "autoFocus": [Function],
                                                                                "autoWidth": [Function],
                                                                                "children": [Function],
                                                                                "className": [Function],
                                                                                "classes": [Function],
                                                                                "defaultValue": [Function],
                                                                                "disabled": [Function],
                                                                                "displayEmpty": [Function],
                                                                                "inputRef": [Function],
                                                                                "labelId": [Function],
                                                                                "multiple": [Function],
                                                                                "name": [Function],
                                                                                "onBlur": [Function],
                                                                                "onChange": [Function],
                                                                                "onClose": [Function],
                                                                                "onFocus": [Function],
                                                                                "onOpen": [Function],
                                                                                "open": [Function],
                                                                                "readOnly": [Function],
                                                                                "renderValue": [Function],
                                                                                "tabIndex": [Function],
                                                                                "type": [Function],
                                                                                "value": [Function],
                                                                                "variant": [Function],
                                                                              },
                                                                              "render": [Function],
                                                                            }
                                                                          }
                                                                          inputProps={
                                                                            Object {
                                                                              "IconComponent": Object {
                                                                                "$$typeof": Symbol(react.memo),
                                                                                "compare": null,
                                                                                "type": Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "render": [Function],
                                                                                },
                                                                              },
                                                                              "MenuProps": undefined,
                                                                              "SelectDisplayProps": Object {
                                                                                "id": "currency-to",
                                                                              },
                                                                              "autoWidth": false,
                                                                              "children": Array [
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="USD"
                                                                                >
                                                                                  USD
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="EUR"
                                                                                >
                                                                                  EUR
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                                <WithStyles(ForwardRef(MenuItem))
                                                                                  value="GBP"
                                                                                >
                                                                                  GBP
                                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                              ],
                                                                              "classes": Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "filled": "MuiSelect-filled",
                                                                                "icon": "MuiSelect-icon",
                                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                                "outlined": "MuiSelect-outlined",
                                                                                "root": "MuiSelect-root",
                                                                                "select": "MuiSelect-select",
                                                                                "selectMenu": "MuiSelect-selectMenu",
                                                                              },
                                                                              "displayEmpty": false,
                                                                              "labelId": undefined,
                                                                              "multiple": false,
                                                                              "onClose": undefined,
                                                                              "onOpen": undefined,
                                                                              "open": undefined,
                                                                              "renderValue": undefined,
                                                                              "type": undefined,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                          multiline={false}
                                                                          name="currency-to"
                                                                          onChange={[Function]}
                                                                          value="EUR"
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            autoFocus={false}
                                                                            classes={
                                                                              Object {
                                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "formControl": "MuiInput-formControl",
                                                                                "fullWidth": "MuiInput-fullWidth",
                                                                                "input": "MuiInput-input",
                                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInput-marginDense",
                                                                                "multiline": "MuiInput-multiline",
                                                                                "root": "MuiInput-root MuiInput-underline",
                                                                                "underline": null,
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            inputComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "propTypes": Object {
                                                                                  "IconComponent": [Function],
                                                                                  "MenuProps": [Function],
                                                                                  "SelectDisplayProps": [Function],
                                                                                  "aria-label": [Function],
                                                                                  "autoFocus": [Function],
                                                                                  "autoWidth": [Function],
                                                                                  "children": [Function],
                                                                                  "className": [Function],
                                                                                  "classes": [Function],
                                                                                  "defaultValue": [Function],
                                                                                  "disabled": [Function],
                                                                                  "displayEmpty": [Function],
                                                                                  "inputRef": [Function],
                                                                                  "labelId": [Function],
                                                                                  "multiple": [Function],
                                                                                  "name": [Function],
                                                                                  "onBlur": [Function],
                                                                                  "onChange": [Function],
                                                                                  "onClose": [Function],
                                                                                  "onFocus": [Function],
                                                                                  "onOpen": [Function],
                                                                                  "open": [Function],
                                                                                  "readOnly": [Function],
                                                                                  "renderValue": [Function],
                                                                                  "tabIndex": [Function],
                                                                                  "type": [Function],
                                                                                  "value": [Function],
                                                                                  "variant": [Function],
                                                                                },
                                                                                "render": [Function],
                                                                              }
                                                                            }
                                                                            inputProps={
                                                                              Object {
                                                                                "IconComponent": Object {
                                                                                  "$$typeof": Symbol(react.memo),
                                                                                  "compare": null,
                                                                                  "type": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  },
                                                                                },
                                                                                "MenuProps": undefined,
                                                                                "SelectDisplayProps": Object {
                                                                                  "id": "currency-to",
                                                                                },
                                                                                "autoWidth": false,
                                                                                "children": Array [
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="USD"
                                                                                  >
                                                                                    USD
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="EUR"
                                                                                  >
                                                                                    EUR
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                                    value="GBP"
                                                                                  >
                                                                                    GBP
                                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                                ],
                                                                                "classes": Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "filled": "MuiSelect-filled",
                                                                                  "icon": "MuiSelect-icon",
                                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                                  "outlined": "MuiSelect-outlined",
                                                                                  "root": "MuiSelect-root",
                                                                                  "select": "MuiSelect-select",
                                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                                },
                                                                                "displayEmpty": false,
                                                                                "labelId": undefined,
                                                                                "multiple": false,
                                                                                "onClose": undefined,
                                                                                "onOpen": undefined,
                                                                                "open": undefined,
                                                                                "renderValue": undefined,
                                                                                "type": undefined,
                                                                                "variant": "standard",
                                                                              }
                                                                            }
                                                                            multiline={false}
                                                                            name="currency-to"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="EUR"
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={false}
                                                                              inputComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "propTypes": Object {
                                                                                    "IconComponent": [Function],
                                                                                    "MenuProps": [Function],
                                                                                    "SelectDisplayProps": [Function],
                                                                                    "aria-label": [Function],
                                                                                    "autoFocus": [Function],
                                                                                    "autoWidth": [Function],
                                                                                    "children": [Function],
                                                                                    "className": [Function],
                                                                                    "classes": [Function],
                                                                                    "defaultValue": [Function],
                                                                                    "disabled": [Function],
                                                                                    "displayEmpty": [Function],
                                                                                    "inputRef": [Function],
                                                                                    "labelId": [Function],
                                                                                    "multiple": [Function],
                                                                                    "name": [Function],
                                                                                    "onBlur": [Function],
                                                                                    "onChange": [Function],
                                                                                    "onClose": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "onOpen": [Function],
                                                                                    "open": [Function],
                                                                                    "readOnly": [Function],
                                                                                    "renderValue": [Function],
                                                                                    "tabIndex": [Function],
                                                                                    "type": [Function],
                                                                                    "value": [Function],
                                                                                    "variant": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                }
                                                                              }
                                                                              inputProps={
                                                                                Object {
                                                                                  "IconComponent": Object {
                                                                                    "$$typeof": Symbol(react.memo),
                                                                                    "compare": null,
                                                                                    "type": Object {
                                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                                      "render": [Function],
                                                                                    },
                                                                                  },
                                                                                  "MenuProps": undefined,
                                                                                  "SelectDisplayProps": Object {
                                                                                    "id": "currency-to",
                                                                                  },
                                                                                  "autoWidth": false,
                                                                                  "children": Array [
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="USD"
                                                                                    >
                                                                                      USD
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="EUR"
                                                                                    >
                                                                                      EUR
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                                      value="GBP"
                                                                                    >
                                                                                      GBP
                                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                                  ],
                                                                                  "classes": Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "filled": "MuiSelect-filled",
                                                                                    "icon": "MuiSelect-icon",
                                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                                    "outlined": "MuiSelect-outlined",
                                                                                    "root": "MuiSelect-root",
                                                                                    "select": "MuiSelect-select",
                                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                                  },
                                                                                  "displayEmpty": false,
                                                                                  "labelId": undefined,
                                                                                  "multiple": false,
                                                                                  "onClose": undefined,
                                                                                  "onOpen": undefined,
                                                                                  "open": undefined,
                                                                                  "renderValue": undefined,
                                                                                  "type": undefined,
                                                                                  "variant": "standard",
                                                                                }
                                                                              }
                                                                              multiline={false}
                                                                              name="currency-to"
                                                                              onChange={[Function]}
                                                                              type="text"
                                                                              value="EUR"
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(SelectInput)
                                                                                  IconComponent={
                                                                                    Object {
                                                                                      "$$typeof": Symbol(react.memo),
                                                                                      "compare": null,
                                                                                      "type": Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "render": [Function],
                                                                                      },
                                                                                    }
                                                                                  }
                                                                                  SelectDisplayProps={
                                                                                    Object {
                                                                                      "id": "currency-to",
                                                                                    }
                                                                                  }
                                                                                  aria-invalid={false}
                                                                                  autoFocus={false}
                                                                                  autoWidth={false}
                                                                                  className="MuiInputBase-input MuiInput-input"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "filled": "MuiSelect-filled",
                                                                                      "icon": "MuiSelect-icon",
                                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                                      "outlined": "MuiSelect-outlined",
                                                                                      "root": "MuiSelect-root",
                                                                                      "select": "MuiSelect-select",
                                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  displayEmpty={false}
                                                                                  inputRef={[Function]}
                                                                                  multiple={false}
                                                                                  name="currency-to"
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  value="EUR"
                                                                                  variant="standard"
                                                                                >
                                                                                  <div
                                                                                    aria-haspopup="listbox"
                                                                                    aria-labelledby="currency-to"
                                                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                    id="currency-to"
                                                                                    onBlur={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    role="button"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    EUR
                                                                                  </div>
                                                                                  <input
                                                                                    aria-hidden={true}
                                                                                    autoFocus={false}
                                                                                    className="MuiSelect-nativeInput"
                                                                                    name="currency-to"
                                                                                    onAnimationStart={[Function]}
                                                                                    onChange={[Function]}
                                                                                    required={false}
                                                                                    tabIndex={-1}
                                                                                    value="EUR"
                                                                                  />
                                                                                  <ForwardRef(ArrowDropDownIcon)
                                                                                    className="MuiSelect-icon"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                                      className="MuiSelect-icon"
                                                                                    >
                                                                                      <ForwardRef(SvgIcon)
                                                                                        className="MuiSelect-icon"
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M7 10l5 5 5-5z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(ArrowDropDownIcon)>
                                                                                  <WithStyles(ForwardRef(Menu))
                                                                                    MenuListProps={
                                                                                      Object {
                                                                                        "aria-labelledby": undefined,
                                                                                        "disableListWrap": true,
                                                                                        "role": "listbox",
                                                                                      }
                                                                                    }
                                                                                    PaperProps={
                                                                                      Object {
                                                                                        "style": Object {
                                                                                          "minWidth": undefined,
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    anchorEl={
                                                                                      <div
                                                                                        aria-haspopup="listbox"
                                                                                        aria-labelledby="currency-to"
                                                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                        id="currency-to"
                                                                                        role="button"
                                                                                        tabindex="0"
                                                                                      >
                                                                                        EUR
                                                                                      </div>
                                                                                    }
                                                                                    id="menu-currency-to"
                                                                                    onClose={[Function]}
                                                                                    open={false}
                                                                                  >
                                                                                    <ForwardRef(Menu)
                                                                                      MenuListProps={
                                                                                        Object {
                                                                                          "aria-labelledby": undefined,
                                                                                          "disableListWrap": true,
                                                                                          "role": "listbox",
                                                                                        }
                                                                                      }
                                                                                      PaperProps={
                                                                                        Object {
                                                                                          "style": Object {
                                                                                            "minWidth": undefined,
                                                                                          },
                                                                                        }
                                                                                      }
                                                                                      anchorEl={
                                                                                        <div
                                                                                          aria-haspopup="listbox"
                                                                                          aria-labelledby="currency-to"
                                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                          id="currency-to"
                                                                                          role="button"
                                                                                          tabindex="0"
                                                                                        >
                                                                                          EUR
                                                                                        </div>
                                                                                      }
                                                                                      classes={
                                                                                        Object {
                                                                                          "list": "MuiMenu-list",
                                                                                          "paper": "MuiMenu-paper",
                                                                                        }
                                                                                      }
                                                                                      id="menu-currency-to"
                                                                                      onClose={[Function]}
                                                                                      open={false}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(Popover))
                                                                                        PaperProps={
                                                                                          Object {
                                                                                            "classes": Object {
                                                                                              "root": "MuiMenu-paper",
                                                                                            },
                                                                                            "style": Object {
                                                                                              "minWidth": undefined,
                                                                                            },
                                                                                          }
                                                                                        }
                                                                                        anchorEl={
                                                                                          <div
                                                                                            aria-haspopup="listbox"
                                                                                            aria-labelledby="currency-to"
                                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                            id="currency-to"
                                                                                            role="button"
                                                                                            tabindex="0"
                                                                                          >
                                                                                            EUR
                                                                                          </div>
                                                                                        }
                                                                                        anchorOrigin={
                                                                                          Object {
                                                                                            "horizontal": "left",
                                                                                            "vertical": "top",
                                                                                          }
                                                                                        }
                                                                                        getContentAnchorEl={[Function]}
                                                                                        id="menu-currency-to"
                                                                                        onClose={[Function]}
                                                                                        onEntering={[Function]}
                                                                                        open={false}
                                                                                        transformOrigin={
                                                                                          Object {
                                                                                            "horizontal": "left",
                                                                                            "vertical": "top",
                                                                                          }
                                                                                        }
                                                                                        transitionDuration="auto"
                                                                                      >
                                                                                        <ForwardRef(Popover)
                                                                                          PaperProps={
                                                                                            Object {
                                                                                              "classes": Object {
                                                                                                "root": "MuiMenu-paper",
                                                                                              },
                                                                                              "style": Object {
                                                                                                "minWidth": undefined,
                                                                                              },
                                                                                            }
                                                                                          }
                                                                                          anchorEl={
                                                                                            <div
                                                                                              aria-haspopup="listbox"
                                                                                              aria-labelledby="currency-to"
                                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                                                              id="currency-to"
                                                                                              role="button"
                                                                                              tabindex="0"
                                                                                            >
                                                                                              EUR
                                                                                            </div>
                                                                                          }
                                                                                          anchorOrigin={
                                                                                            Object {
                                                                                              "horizontal": "left",
                                                                                              "vertical": "top",
                                                                                            }
                                                                                          }
                                                                                          classes={
                                                                                            Object {
                                                                                              "paper": "MuiPopover-paper",
                                                                                              "root": "MuiPopover-root",
                                                                                            }
                                                                                          }
                                                                                          getContentAnchorEl={[Function]}
                                                                                          id="menu-currency-to"
                                                                                          onClose={[Function]}
                                                                                          onEntering={[Function]}
                                                                                          open={false}
                                                                                          transformOrigin={
                                                                                            Object {
                                                                                              "horizontal": "left",
                                                                                              "vertical": "top",
                                                                                            }
                                                                                          }
                                                                                          transitionDuration="auto"
                                                                                        >
                                                                                          <ForwardRef(Modal)
                                                                                            BackdropProps={
                                                                                              Object {
                                                                                                "invisible": true,
                                                                                              }
                                                                                            }
                                                                                            className="MuiPopover-root"
                                                                                            container={<body />}
                                                                                            id="menu-currency-to"
                                                                                            onClose={[Function]}
                                                                                            open={false}
                                                                                          />
                                                                                        </ForwardRef(Popover)>
                                                                                      </WithStyles(ForwardRef(Popover))>
                                                                                    </ForwardRef(Menu)>
                                                                                  </WithStyles(ForwardRef(Menu))>
                                                                                </ForwardRef(SelectInput)>
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(Input)>
                                                                      </WithStyles(ForwardRef(Input))>
                                                                    </ForwardRef(Select)>
                                                                  </WithStyles(ForwardRef(Select))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                      </Select>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </Control>
                                    <RateRatio
                                      currencySymbolLeft="€"
                                      currencySymbolRight="$"
                                      loading={false}
                                      rate="5"
                                    >
                                      <Styled(MuiBox)
                                        my={1}
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-22"
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            variant="caption"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="caption"
                                            >
                                              <span
                                                className="MuiTypography-root MuiTypography-caption"
                                              >
                                                1 
                                                €
                                                 = 
                                                5
                                                 
                                                $
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </RateRatio>
                                  </Converter>
                                </Connect(Converter)>
                              </div>
                            </Styled(MuiBox)>
                            <Connect(ButtonTransfer)>
                              <ButtonTransfer
                                converterEntities={
                                  Object {
                                    "activeType": "from",
                                    "from": Object {
                                      "amount": "0",
                                      "currency": "USD",
                                    },
                                    "to": Object {
                                      "amount": "0",
                                      "currency": "EUR",
                                    },
                                  }
                                }
                                exchangeRateLoading={false}
                                loadingPayment={false}
                                transferPaymentAction={[Function]}
                              >
                                <WithStyles(ForwardRef(Button))
                                  className="makeStyles-button-23"
                                  disabled={true}
                                  onClick={[Function]}
                                  variant="outlined"
                                >
                                  <ForwardRef(Button)
                                    className="makeStyles-button-23"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    disabled={true}
                                    onClick={[Function]}
                                    variant="outlined"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiButton-root MuiButton-outlined makeStyles-button-23 Mui-disabled"
                                      component="button"
                                      disabled={true}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiButton-root MuiButton-outlined makeStyles-button-23 Mui-disabled"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root MuiButton-root MuiButton-outlined makeStyles-button-23 Mui-disabled Mui-disabled"
                                          disabled={true}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={-1}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            transfer payment
                                          </span>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                              </ButtonTransfer>
                            </Connect(ButtonTransfer)>
                            <Connect(Notification)>
                              <Notification
                                dispatch={[Function]}
                                messageNotification=""
                                showNotification={false}
                                typeNotification=""
                              />
                            </Connect(Notification)>
                          </div>
                        </Styled(MuiBox)>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </CenteredContent>
        </Home>
      </Connect(Home)>
    </Provider>
  </ThemeProvider>
</MaterialUIWrapper>
`;
